---
import TransparentHeader from "@/components/TransparentHeader/TransparentHeader";
import type { ApiData, SectionsHomeAbout } from "../interfaces/dbData";
import Layout from "../layouts/Layout.astro";
import { ReviewsData } from "../../public/reviews/reviews.json";
let UrlApi = import.meta.env.API_URL;
let KetApi = import.meta.env.API_KEY;
// Realiza la llamada a la API
const response = await fetch(`${UrlApi}/${KetApi}`);
const data: ApiData = await response.json();

//filtrar para obtener la section de blocks
const dataBlocks = data?.sectionsHomeAbout.filter(
  (section: SectionsHomeAbout) => section.section === "blocks"
);

// datos de las reviews
const dataReviews = data.reviews;
---


<Layout
  title={`${data.name} | Reviews`}
  description={dataBlocks[5]?.text}
  favicon={data.logos.secondary}
  featuredImage={data.logos.favicon}
  keywords="reviews, testimonials, feedback, comments, ratings, stars, testimonials, customer reviews, customer feedback, customer comments, customer ratings, customer stars"
>
  <TransparentHeader
    bgImages={dataBlocks[5]?.additionalImages[0]}
    title={dataBlocks[5]?.title || "Our Reviews"}
    client:load
  />
  <div class="pt-20 pb-28 w-4/5 mx-auto">
    <h2 class="text-3xl md:text-5xl font-bold text-center mb-5 capitalize">
      What our customers say
    </h2>
    <div
      class="border-b-2 border-[#EBECE9] mb-5 relative before:absolute before:w-1/3 before:mx-auto before:bg-btnHover before:h-1 before:left-0 before:right-0 before:top-0"
    >
    </div>

    {
      dataReviews.urlReviews.length > 0 ? (
        <div class={`${dataReviews.urlReviews} py-10`} />
      ) : (
        <div class="flex flex-col gap-6">
          {ReviewsData.map((item, index) => {
            return (
              <article class="h-auto p-2 flex flex-col rounded-3xl bg-gray-100 w-auto">
                <div class="flex flex-col">
                  <div class="p-2 flex space-x-2">
                    <div class="flex justify-center">
                      <img
                        src={item.gallery[0]}
                        alt="perfil-foto"
                        class="w-[50px] h-auto rounded-full object-cover"
                      />
                    </div>
                    <div>
                      <span class="text-[20px] font-semibold">
                        {" "}
                        {item.name}{" "}
                      </span>
                      <div class="rating">
            {[...Array(5)].map((_, i) => (
              <span class={i < Number(item.subdescription) ? "text-yellow-500" : "text-gray-400"}>
                â˜…
              </span>
            ))}
          </div>
                    </div>
                  </div>
                </div>
                <div class="p-5 ">{item.description}</div>
                <div class="w-full flex items-center space-x-3 ml-3">
                  <div class="w-[25px] h-[25px] flex items-center">
                    <img
                      src={item.gallery[1]}
                      alt="agni"
                      class="w-full mx-auto"
                    />
                  </div>
                  <div class="flex flex-col items-center justify-start">
                    <p>Posted On</p>
                  </div>
                </div>
              </article>
            );
          })}
        </div>
      )
    }
  </div>
</Layout>
